<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIMedia.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIMedia</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
            
			
			<NodeRef refid="32"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setFileName:</TokenIdentifier>
			<Abstract type="html">The media file name</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *fileName</Declaration>
			
			
			<Anchor>//api/name/fileName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/fileName</TokenIdentifier>
			<Abstract type="html">The media file name</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *fileName</Declaration>
			
			
			<Anchor>//api/name/fileName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/fileName</TokenIdentifier>
			<Abstract type="html">The media file name</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *fileName</Declaration>
			
			
			<Anchor>//api/name/fileName</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setFileSize:</TokenIdentifier>
			<Abstract type="html">The media file size</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) long long fileSize</Declaration>
			
			
			<Anchor>//api/name/fileSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/fileSize</TokenIdentifier>
			<Abstract type="html">The media file size</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) long long fileSize</Declaration>
			
			
			<Anchor>//api/name/fileSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/fileSize</TokenIdentifier>
			<Abstract type="html">The media file size</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) long long fileSize</Declaration>
			
			
			<Anchor>//api/name/fileSize</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setCreateTime:</TokenIdentifier>
			<Abstract type="html">The media&apos;s create time</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *createTime</Declaration>
			
			
			<Anchor>//api/name/createTime</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/createTime</TokenIdentifier>
			<Abstract type="html">The media&apos;s create time</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *createTime</Declaration>
			
			
			<Anchor>//api/name/createTime</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/createTime</TokenIdentifier>
			<Abstract type="html">The media&apos;s create time</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *createTime</Declaration>
			
			
			<Anchor>//api/name/createTime</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setDurationSeconds:</TokenIdentifier>
			<Abstract type="html">If media is video. this property is show the duration of the video</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) float durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/durationSeconds</TokenIdentifier>
			<Abstract type="html">If media is video. this property is show the duration of the video</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) float durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/durationSeconds</TokenIdentifier>
			<Abstract type="html">If media is video. this property is show the duration of the video</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) float durationSeconds</Declaration>
			
			
			<Anchor>//api/name/durationSeconds</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setMediaType:</TokenIdentifier>
			<Abstract type="html">The media type</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MediaType mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/mediaType</TokenIdentifier>
			<Abstract type="html">The media type</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MediaType mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/mediaType</TokenIdentifier>
			<Abstract type="html">The media type</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) MediaType mediaType</Declaration>
			
			
			<Anchor>//api/name/mediaType</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setMediaURL:</TokenIdentifier>
			<Abstract type="html">The media url</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *mediaURL</Declaration>
			
			
			<Anchor>//api/name/mediaURL</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/mediaURL</TokenIdentifier>
			<Abstract type="html">The media url</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *mediaURL</Declaration>
			
			
			<Anchor>//api/name/mediaURL</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/mediaURL</TokenIdentifier>
			<Abstract type="html">The media url</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) NSString *mediaURL</Declaration>
			
			
			<Anchor>//api/name/mediaURL</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/setThumbnail:</TokenIdentifier>
			<Abstract type="html">Thumbnail of this media. if nil user should call once - fetchThumbnail: to fetch the thumbnail data</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) UIImage *thumbnail</Declaration>
			
			
			<Anchor>//api/name/thumbnail</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/thumbnail</TokenIdentifier>
			<Abstract type="html">Thumbnail of this media. if nil user should call once - fetchThumbnail: to fetch the thumbnail data</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) UIImage *thumbnail</Declaration>
			
			
			<Anchor>//api/name/thumbnail</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIMedia/thumbnail</TokenIdentifier>
			<Abstract type="html">Thumbnail of this media. if nil user should call once - fetchThumbnail: to fetch the thumbnail data</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) UIImage *thumbnail</Declaration>
			
			
			<Anchor>//api/name/thumbnail</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/initWithMediaURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>- (id)initWithMediaURL:(NSString *)url</Declaration>
			
			
			<Anchor>//api/name/initWithMediaURL:</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/fetchThumbnail:</TokenIdentifier>
			<Abstract type="html">Fetch this media&apos;s thumbnail from remote album.</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>- (void)fetchThumbnail:(AsyncOperationHandler)completion</Declaration>
			<Parameters>
				<Parameter>
					<Name>completion</Name>
					<Abstract type="html">if there is no error, property &quot;thumbnail&quot; will be set</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchThumbnail:</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/fetchMediaData:</TokenIdentifier>
			<Abstract type="html">Fetch media data from remote album.</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>- (void)fetchMediaData:(AsyncFetchHandler)handler</Declaration>
			<Parameters>
				<Parameter>
					<Name>handler</Name>
					<Abstract type="html">Data callback will call when received data frome remote or some error occured</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchMediaData:</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIMedia/fetchPreviewImageWithResult:</TokenIdentifier>
			<Abstract type="html">Fetch media&apos;s preview image(960 x 540). the mediaType of this media object should be &apos;MediaTypeJPG&apos;</Abstract>
			<DeclaredIn>DJIMedia.h</DeclaredIn>
			
			<Declaration>- (void)fetchPreviewImageWithResult:(void ( ^ ) ( UIImage *image , NSError *error ))result</Declaration>
			<Parameters>
				<Parameter>
					<Name>result</Name>
					<Abstract type="html">Remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchPreviewImageWithResult:</Anchor>
            <NodeRef refid="32"/>
		</Token>
		
        
        
	</File>
</Tokens>