<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIRangeExtender.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIRangeExtender</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
            
			
			<NodeRef refid="49"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/setDelegate:</TokenIdentifier>
			<Abstract type="html">Range extender power level update delegate</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIRangeExtenderDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/delegate</TokenIdentifier>
			<Abstract type="html">Range extender power level update delegate</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIRangeExtenderDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIRangeExtender/delegate</TokenIdentifier>
			<Abstract type="html">Range extender power level update delegate</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIRangeExtenderDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/startRangeExtenderPowerLevelUpdates</TokenIdentifier>
			<Abstract type="html">Start power level update.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (void)startRangeExtenderPowerLevelUpdates</Declaration>
			
			
			<Anchor>//api/name/startRangeExtenderPowerLevelUpdates</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/stopRangeExtenderPowerLevelUpdates</TokenIdentifier>
			<Abstract type="html">Stop power level update.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (void)stopRangeExtenderPowerLevelUpdates</Declaration>
			
			
			<Anchor>//api/name/stopRangeExtenderPowerLevelUpdates</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getRangeExtenderPowerLevel</TokenIdentifier>
			<Abstract type="html">Get the power level of the range extender.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (int)getRangeExtenderPowerLevel</Declaration>
			
			<ReturnValue><Abstract type="html">Power level between [0, 10]. -1 is invalid power level.</Abstract></ReturnValue>
			<Anchor>//api/name/getRangeExtenderPowerLevel</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/bindRangeExtenderWithCameraMAC:</TokenIdentifier>
			<Abstract type="html">Bind mac address to the range extender.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (BOOL)bindRangeExtenderWithCameraMAC:(NSString *)macAddr</Declaration>
			<Parameters>
				<Parameter>
					<Name>macAddr</Name>
					<Abstract type="html">The target bind camera&apos;s MAC address, get frome the QR code stick on the aircraft. the input MAC address should be this format:  60:60:1f:xx:xx:xx</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Return bind result. if YES then bind Succeeded.

@attention If bind success, the range extender will reboot automatically.</Abstract></ReturnValue>
			<Anchor>//api/name/bindRangeExtenderWithCameraMAC:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getCurrentBindingMAC</TokenIdentifier>
			<Abstract type="html">Get the binding mac address of the range extender.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (NSString *)getCurrentBindingMAC</Declaration>
			
			<ReturnValue><Abstract type="html">Return the binding MAC address. return nil if no binding.</Abstract></ReturnValue>
			<Anchor>//api/name/getCurrentBindingMAC</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getCurrentBindingSSID</TokenIdentifier>
			<Abstract type="html">Get the binding ssid</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (NSString *)getCurrentBindingSSID</Declaration>
			
			<ReturnValue><Abstract type="html">Return the binding SSID, return nil if no binding.</Abstract></ReturnValue>
			<Anchor>//api/name/getCurrentBindingSSID</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getMacAddressOfRangeExtender</TokenIdentifier>
			<Abstract type="html">Get MAC Address of range extender.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (NSString *)getMacAddressOfRangeExtender</Declaration>
			
			<ReturnValue><Abstract type="html">MAC address of range extender.</Abstract></ReturnValue>
			<Anchor>//api/name/getMacAddressOfRangeExtender</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getSsidOfRangeExtender</TokenIdentifier>
			<Abstract type="html">Get SSID of range extender.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (NSString *)getSsidOfRangeExtender</Declaration>
			
			<ReturnValue><Abstract type="html">SSID of range extender.</Abstract></ReturnValue>
			<Anchor>//api/name/getSsidOfRangeExtender</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/renameSsidOfRangeExtender:</TokenIdentifier>
			<Abstract type="html">Rename the range extender&apos;s ssid.</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (BOOL)renameSsidOfRangeExtender:(NSString *)newSsid</Declaration>
			<Parameters>
				<Parameter>
					<Name>newName</Name>
					<Abstract type="html">New ssid name of range extender, must has prefix &quot;Phantom_&quot;
@attention If rename operation success, the range extender will reboot automatically.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/renameSsidOfRangeExtender:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/getRangeExtenderWiFiPassword</TokenIdentifier>
			<Abstract type="html">Get wifi password</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (NSString *)getRangeExtenderWiFiPassword</Declaration>
			
			<ReturnValue><Abstract type="html">WIFI password or nil</Abstract></ReturnValue>
			<Anchor>//api/name/getRangeExtenderWiFiPassword</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIRangeExtender/setRangeExtenderWiFiPassword:</TokenIdentifier>
			<Abstract type="html">Set wifi password</Abstract>
			<DeclaredIn>DJIRangeExtender.h</DeclaredIn>
			
			<Declaration>- (BOOL)setRangeExtenderWiFiPassword:(NSString *)password</Declaration>
			<Parameters>
				<Parameter>
					<Name>password</Name>
					<Abstract type="html">New wifi passwords that is made up of letters and numbers and should be 8 - 16 charactersã€‚
set nil to cancel setup password
@attention Hard reset range extender will clean password</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setRangeExtenderWiFiPassword:</Anchor>
            <NodeRef refid="49"/>
		</Token>
		
        
        
	</File>
</Tokens>