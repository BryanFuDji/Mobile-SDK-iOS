<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIPhantomCamera.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIPhantomCamera</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
            
			
			<NodeRef refid="46"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraVersion</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s firmware version</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (NSString *)getCameraVersion</Declaration>
			
			<ReturnValue><Abstract type="html">Return the firmware version of the camera. return nil if disconnected.</Abstract></ReturnValue>
			<Anchor>//api/name/getCameraVersion</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/startTakePhoto:withResult:</TokenIdentifier>
			<Abstract type="html">Take photo with mode, if the capture mode is CameraMultiCapture or CameraContinousCapture, you should call stopTakePhotoWithResult to stop photoing</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)startTakePhoto:(CameraCaptureMode)captureMode withResult:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>captureMode</Name>
					<Abstract type="html">Tell the camera what capture action will be do, if capture mode is multi capture or continuous capture, user should call the &apos;stopTakePhotWithResult&apos; to stop catpture if need.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startTakePhoto:withResult:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/stopTakePhotoWithResult:</TokenIdentifier>
			<Abstract type="html">Stop the mutil capture or continous capture. should match the startTakePhoto action.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)stopTakePhotoWithResult:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopTakePhotoWithResult:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/startRecord:</TokenIdentifier>
			<Abstract type="html">Start recording</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)startRecord:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/startRecord:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/stopRecord:</TokenIdentifier>
			<Abstract type="html">Stop recording</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)stopRecord:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/stopRecord:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/startCameraSystemStateUpdates</TokenIdentifier>
			<Abstract type="html">Start the camera system state updates.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)startCameraSystemStateUpdates</Declaration>
			
			
			<Anchor>//api/name/startCameraSystemStateUpdates</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/stopCameraSystemStateUpdates</TokenIdentifier>
			<Abstract type="html">Stop the camera system state updates</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)stopCameraSystemStateUpdates</Declaration>
			
			
			<Anchor>//api/name/stopCameraSystemStateUpdates</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/fetchMediaListWithResultBlock:</TokenIdentifier>
			<Abstract type="html">Fetch media list from remote album.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)fetchMediaListWithResultBlock:(void ( ^ ) ( NSArray *mediaList , NSError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result block
@attention The camera mode should be set as &apos;CameraUSBMode&apos;.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/fetchMediaListWithResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setVideoQuality:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the video quality, e.g. 640x480</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setVideoQuality:(VideoQuality)videoQuality withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>videoQuality</Name>
					<Abstract type="html">Video quality to be set</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.
@attention If the parameters was configured Succeeded, the remote video module will restart</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setVideoQuality:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraPhotoSize:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the photo&apos;s pixel size. The camera will used this size to storage photo after taking photo.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraPhotoSize:(CameraPhotoSizeType)photoSize withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>photoSize</Name>
					<Abstract type="html">Photo&apos;s pixel size</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraPhotoSize:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraPhotoSize:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s photo pixel size parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraPhotoSize:(void ( ^ ) ( CameraPhotoSizeType photoSize , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraPhotoSize:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraISO:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set camera&apos;s ISO parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraISO:(CameraISOType)isoType withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>isoType</Name>
					<Abstract type="html">Iso type</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraISO:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraISO:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s ISO parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraISO:(void ( ^ ) ( CameraISOType iso , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result block</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraISO:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraWhiteBalance:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s white balance parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraWhiteBalance:(CameraWhiteBalanceType)whiteBalance withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>whiteBalance</Name>
					<Abstract type="html">White balance parameter.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraWhiteBalance:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraWhiteBalance:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s white balance parameter</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraWhiteBalance:(void ( ^ ) ( CameraWhiteBalanceType whiteBalance , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraWhiteBalance:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraExposureMetering:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s exposure metering parameter</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraExposureMetering:(CameraExposureMeteringType)meteringType withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>meteringType</Name>
					<Abstract type="html">Exposure metering</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result  callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraExposureMetering:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraExposureMetering:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s exposure metering parameter</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraExposureMetering:(void ( ^ ) ( CameraExposureMeteringType exposureMetering , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result block callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraExposureMetering:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraRecordingResolution:andFOV:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s recording resolution and fov parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraRecordingResolution:(CameraRecordingResolutionType)resolution andFOV:(CameraRecordingFovType)fov withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>resolution</Name>
					<Abstract type="html">Recording resolution is used by camera while in recording.</Abstract>
				</Parameter><Parameter>
					<Name>fov</Name>
					<Abstract type="html">Recording FOV is used by camera while in recording.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraRecordingResolution:andFOV:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraRecordingResolution:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s recording resolution and fov parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraRecordingResolution:(void ( ^ ) ( CameraRecordingResolutionType resolution , CameraRecordingFovType fov , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraRecordingResolution:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraPhotoFormat:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s photo storage format.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraPhotoFormat:(CameraPhotoFormatType)photoFormat withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>photoFormat</Name>
					<Abstract type="html">Photo storage format is used by camera after take photo.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraPhotoFormat:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraPhotoFormat:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s photo storage format.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraPhotoFormat:(void ( ^ ) ( CameraPhotoFormatType photoFormat , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraPhotoFormat:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraExposureCompensation:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s exposure compensation parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraExposureCompensation:(CameraExposureCompensationType)compensationType withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>compensationType</Name>
					<Abstract type="html">Camera&apos;s exposure compensation parameter.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraExposureCompensation:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraExposureCompensation:</TokenIdentifier>
			<Abstract type="html">Get camera&apos;s exposure compensation parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraExposureCompensation:(void ( ^ ) ( CameraExposureCompensationType exposureCompensation , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraExposureCompensation:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraAntiFlicker:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s anti flicker parameter</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraAntiFlicker:(CameraAntiFlickerType)antiFlickerType withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>antiFlickerType</Name>
					<Abstract type="html">Camera&apos;s anti flicker parameter.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraAntiFlicker:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraAntiFlicker:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s anti flicker parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraAntiFlicker:(void ( ^ ) ( CameraAntiFlickerType antiFlicker , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraAntiFlicker:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraSharpness:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s sharpness parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraSharpness:(CameraSharpnessType)sharpness withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>sharpness</Name>
					<Abstract type="html">Camera&apos;s sharpness parameter.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraSharpness:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraSharpness:</TokenIdentifier>
			<Abstract type="html">Get camera&apos;s sharpness parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraSharpness:(void ( ^ ) ( CameraSharpnessType sharpness , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraSharpness:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraContrast:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s contrast parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraContrast:(CameraContrastType)contrast withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>contrast</Name>
					<Abstract type="html">Camera&apos;s contrast parameter</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraContrast:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraContrast:</TokenIdentifier>
			<Abstract type="html">Get camera&apos;s contrast parameter.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraContrast:(void ( ^ ) ( CameraContrastType contrast , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraContrast:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/syncTime:</TokenIdentifier>
			<Abstract type="html">Sync local time to camera. the camera should had synced time from device while doing take photo or record action, or the camera will return &quot;Time Not Sync&quot; error</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)syncTime:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/syncTime:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraGps:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s GPS parameter. The gps parameter will write into meta data of photo or video file.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraGps:(CLLocationCoordinate2D)gps withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>gps</Name>
					<Abstract type="html">GPS</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraGps:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraGps:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s GPS</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraGps:(void ( ^ ) ( CLLocationCoordinate2D coordinate , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraGps:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setMultiCaptureCount:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set multi capture count.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setMultiCaptureCount:(CameraMultiCaptureCount)count withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>count</Name>
					<Abstract type="html">Multi capture count</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setMultiCaptureCount:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getMultiCaptureCount:</TokenIdentifier>
			<Abstract type="html">Get multi capture count.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getMultiCaptureCount:(void ( ^ ) ( CameraMultiCaptureCount multiCaptureCount , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getMultiCaptureCount:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setContinuousCapture:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s continuous capture parameters</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setContinuousCapture:(CameraContinuousCapturePara)capturePara withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setContinuousCapture:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getContinuousCaptureParam:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s continuous capture parameters</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getContinuousCaptureParam:(void ( ^ ) ( CameraContinuousCapturePara capturePara , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getContinuousCaptureParam:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraActionWhenConnectionBroken:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera how to do while the connection was broken.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraActionWhenConnectionBroken:(CameraActionWhenBreak)action withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>action</Name>
					<Abstract type="html">How the Camera will action while the connection broken.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraActionWhenConnectionBroken:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraActionWhenConnectionBroken:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s action settings while the connection was broken.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraActionWhenConnectionBroken:(void ( ^ ) ( CameraActionWhenBreak cameraAction , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraActionWhenConnectionBroken:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/saveCameraSettings:</TokenIdentifier>
			<Abstract type="html">Save the camera&apos;s settings permanently. or the settings will be lost after camera restart.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)saveCameraSettings:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/saveCameraSettings:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/restoreCameraDefaultSettings:</TokenIdentifier>
			<Abstract type="html">Restore the default built-in settings.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)restoreCameraDefaultSettings:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/restoreCameraDefaultSettings:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCamerMode:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s mode. The camera mode decide how the camera work. In CameraUSBMode, could not take photo, recording or change camera parameters, in this mode, we could use - fetchMediaListWithResultBlock: API to access medias file on SD card and download medias file from SD carad.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCamerMode:(CameraMode)mode withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>mode</Name>
					<Abstract type="html">Camera mode</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCamerMode:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/getCameraPhotoNamePrefix:</TokenIdentifier>
			<Abstract type="html">Get the camera&apos;s photo name prefix</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)getCameraPhotoNamePrefix:(void ( ^ ) ( NSString *prefix , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result block</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getCameraPhotoNamePrefix:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIPhantomCamera/setCameraPhotoNamePrefix:withResultBlock:</TokenIdentifier>
			<Abstract type="html">Set the camera&apos;s photo name prefix. The new name prefix must have only four fixed characters, and the  prefix should be comprised of character &apos;A&apos; - &apos;Z&apos; and &apos;&apos;. for example &quot;DJI&quot;.</Abstract>
			<DeclaredIn>DJIPhantomCamera.h</DeclaredIn>
			
			<Declaration>- (void)setCameraPhotoNamePrefix:(NSString *)prefix withResultBlock:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>prefix</Name>
					<Abstract type="html">New photo name prefix.</Abstract>
				</Parameter><Parameter>
					<Name>block</Name>
					<Abstract type="html">The remote execute result block</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCameraPhotoNamePrefix:withResultBlock:</Anchor>
            <NodeRef refid="46"/>
		</Token>
		
        
        
	</File>
</Tokens>