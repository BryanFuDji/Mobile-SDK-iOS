<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/DJIGimbal.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/DJIGimbal</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
            
			
			<NodeRef refid="14"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, weak) id&lt;DJIGimbalDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setAttitudeUpdateInterval:</TokenIdentifier>
			<Abstract type="html">the attitude update time interval, the value should not smaller than 25ms. Default value is 50ms</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int attitudeUpdateInterval</Declaration>
			
			
			<Anchor>//api/name/attitudeUpdateInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/attitudeUpdateInterval</TokenIdentifier>
			<Abstract type="html">the attitude update time interval, the value should not smaller than 25ms. Default value is 50ms</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int attitudeUpdateInterval</Declaration>
			
			
			<Anchor>//api/name/attitudeUpdateInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/attitudeUpdateInterval</TokenIdentifier>
			<Abstract type="html">the attitude update time interval, the value should not smaller than 25ms. Default value is 50ms</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) int attitudeUpdateInterval</Declaration>
			
			
			<Anchor>//api/name/attitudeUpdateInterval</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalAttitude:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude gimbalAttitude</Declaration>
			
			
			<Anchor>//api/name/gimbalAttitude</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/gimbalAttitude</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude gimbalAttitude</Declaration>
			
			
			<Anchor>//api/name/gimbalAttitude</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/DJIGimbal/gimbalAttitude</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) DJIGimbalAttitude gimbalAttitude</Declaration>
			
			
			<Anchor>//api/name/gimbalAttitude</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getGimbalCapacity</TokenIdentifier>
			<Abstract type="html">Get the gimbal&apos;s capacity.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (DJIGimbalCapacity *)getGimbalCapacity</Declaration>
			
			<ReturnValue><Abstract type="html">gimbal capacity, return nil if connection failured.</Abstract></ReturnValue>
			<Anchor>//api/name/getGimbalCapacity</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/getVersionWithResult:</TokenIdentifier>
			<Abstract type="html">Get gimbal&apos;s firmware version</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)getVersionWithResult:(void ( ^ ) ( NSString *version , DJIError *error ))block</Declaration>
			<Parameters>
				<Parameter>
					<Name>block</Name>
					<Abstract type="html">Remote execute result callback.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getVersionWithResult:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/startGimbalAttitudeUpdates</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)startGimbalAttitudeUpdates</Declaration>
			
			
			<Anchor>//api/name/startGimbalAttitudeUpdates</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/stopGimbalAttitudeUpdates</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)stopGimbalAttitudeUpdates</Declaration>
			
			
			<Anchor>//api/name/stopGimbalAttitudeUpdates</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/startGimbalAttitudeUpdateToQueue:withResultBlock:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)startGimbalAttitudeUpdateToQueue:(NSOperationQueue *)queue withResultBlock:(GimbalAttitudeResultBlock)block</Declaration>
			
			
			<Anchor>//api/name/startGimbalAttitudeUpdateToQueue:withResultBlock:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalFpvMode:withResult:</TokenIdentifier>
			<Abstract type="html">Set FPV mode. Typedef of block to be invoked when fpv mode is set success.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalFpvMode:(BOOL)isFpv withResult:(DJIExecuteResultBlock)block</Declaration>
			
			
			<Anchor>//api/name/setGimbalFpvMode:withResult:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/DJIGimbal/setGimbalPitch:Roll:Yaw:withResult:</TokenIdentifier>
			<Abstract type="html">Set gimbal&apos;s pitch roll yaw rotation.</Abstract>
			<DeclaredIn>DJIGimbal.h</DeclaredIn>
			
			<Declaration>- (void)setGimbalPitch:(DJIGimbalRotation)pitch Roll:(DJIGimbalRotation)roll Yaw:(DJIGimbalRotation)yaw withResult:(DJIExecuteResultBlock)block</Declaration>
			<Parameters>
				<Parameter>
					<Name>pitch</Name>
					<Abstract type="html">Gimbal&apos;s pitch rotation parameter</Abstract>
				</Parameter><Parameter>
					<Name>roll</Name>
					<Abstract type="html">Gimbal&apos;s roll rotation parameter</Abstract>
				</Parameter><Parameter>
					<Name>yaw</Name>
					<Abstract type="html">Gimbal&apos;s yaw rotation parameter</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setGimbalPitch:Roll:Yaw:withResult:</Anchor>
            <NodeRef refid="14"/>
		</Token>
		
        
        
	</File>
</Tokens>